name: Deploy Infrastructure

on:
  push:
    branches: 
      - main
      - master

jobs:
  
  lint:
    runs-on: ubuntu-latest

    steps:
      # a. Baixar o repositório
      - name: Clone Repo
        uses: actions/checkout@v4
      
      # b. Configurar o Terraform
      - name: Instalar terraform
        uses: hashicorp/setup-terraform@v3
      
      # c. Formatadores e Linters
      - name: terraform fmt
        run: terraform fmt -check -diff

      - name: terraform lint
        uses: terraform-linters/setup-tflint@v1

  security:
    needs: [lint]
    runs-on: ubuntu-latest

    steps:
      # a. Baixar o repositório
      - name: Clone Repo
        uses: actions/checkout@v4

      # d. Testes de segurança
      - name: Testing code with Checkov
        id: checkov
        uses: bridgecrewio/checkov-action@master
        with:
          framework: terraform
          soft_fail: true

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          soft_fail: true

  terraform_ansible:
    needs: 
      - lint
      - security
    runs-on: ubuntu-latest

    steps:
      # a. Baixar o repositório
      - name: Clone Repo
        uses: actions/checkout@v4

      # b. Configurar o Terraform
      - name: Instalar terraform
        uses: hashicorp/setup-terraform@v3
      
      # e. Inicializar
      - name: terraform init
        run: terraform init
        env:
          ARM_CLIENT_ID:        ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:    ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID:        ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_admin_passwd:  ${{ secrets.TF_VAR_admin_passwd }}

      # f. Planejar
      - name: terraform plan
        run: terraform plan
        env:
          ARM_CLIENT_ID:        ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:    ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID:        ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_admin_passwd:  ${{ secrets.TF_VAR_admin_passwd }}
      
      # g. Aplicar
      - name: terraform apply if it's main
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID:        ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET:    ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID:  ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID:        ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_admin_passwd:  ${{ secrets.TF_VAR_admin_passwd }}
            
      # Instalar Ansible
      - name: install ansible
        run: sudo apt-get update && sudo apt-get install -y ansible sshpass

      # testing command
      - name: cat inventory
        run: tree ../../ansible/inventory.ini
      
      # run ansible playbook
      - name: run ansible playbook
        run: ansible-playbook -i ../../ansible/inventory.ini ../../ansible/playbook.yml